ECHO :
        il comando echo mi permette di visualizzare sullo schermo un testo o il contenuto di una variabile(dichiarata col $).
        	http://blog.prometheusproject.it/15-esempi-pratici-del-comando-echo-su-linux/
			https://www.tecmint.com/echo-command-in-linux/

	 -> $
	 -> ""
	 -> ''
	 -> -n (elimina il \n)
	 -> * (stampa a video tutti i file presenti, simile ad ls)
	 -> *. nome_estensione_file (stampa a video tuti i file con quella determinata estensione)
	 -> operazioni tra variabili
	 -> > (inserisce all'interno dei file il testo)

EXPORT :
		stampa a video la lista delle variabili esportate
			https://it.wikipedia.org/wiki/Export_(Unix)

.
	-> nome_variabile (aggiunge alla lista delle variabili la variabile)

UNSET :
		elimina la variabile dalla lista delle variabili salvate
		Non accetta altri comandi, segli si passa piú variabiuili controlla la loro
		esistenza, se presemti le elimina, se non presenti non ritorna messagi di errore.
			https://man7.org/linux/man-pages/man1/unset.1p.html
	
	-> nome_variabile

PWD

CD :'
		""
			Non legge \ quindi funzione diversa rispetto a echo per controllo sintassi
			Legge le variabili globali
		''
			Non legge le variabili

ENV : 
		stampa la lista delle variabili di ambiente
			https://www.computerhope.com/unix/uenv.htm

EXIT :
		Il comando exit termina uno script, proprio come in un programma C.
		Può anche restituire un valore, che è disponibile per il processo padre dello script.
			Se é seguito solo da un numero esce.
			Se é seguito da una o piú parola ritorna errore e esce
			Se é seguito da un numero e una o piú parole ritonra errore e non esce

&& || :
	AND and OR lists are sequences of one of more pipelines separated by the &&  and  ||  control  operators,
respectively.  AND and OR lists are executed with left associativity.  An AND list has the form

       command1 && command2

command2 is executed if, and only if, command1 returns an exit status of zero.

An OR list has the form

       command1 || command2

command2  is  executed  if and only if command1 returns a non-zero exit status.  The return status of AND
and OR lists is the exit status of the last command executed in the list.

Se un comando viene terminato dall'operatore di controllo & , la shell esegue il comando in background in 
una subshell. La shell non attende il completamento del comando e lo stato di ritorno è 0.

Wildcarts and Hidden Files :
	Another feature of shells like bash is that wildcards by default will not match hidden files that start with the character “.”.
	In UNIX hidden files start with “.” like .login, .bashrc etc.
	Files that start with “.” should not be matched with a wildcard.
	For example “echo *” will not display “.” and “..”.
	To do this, the shell will add a filename that starts with “.” only if the wildcard also has a “.” at the beginning of the wildcard.
	To do this, the match if statement has to be modified in the following way:. 
	If the filename matches the wildcard, then only if the filename starts with ‘.’ and the wildcard starts with ‘.’ then add the filename as argument.
	Otherwise, if the file name does not start with “.” then add it to the list of arguments.

| o |& :
	L'output di ogni comando nella pipeline è collegato tramite una pipe all'input del comando successivo. 
	Cioè, ogni comando legge l'output del comando precedente. Questa connessione viene eseguita prima di qualsiasi reindirizzamento specificato dal comando.
	Se '|&' viene utilizzato, l'errore standard di comando1 , oltre al suo output standard, è collegato allo standard input di comando2 tramite la pipe. 
	Questo reindirizzamento implicito dell'errore standard allo standard output viene eseguito dopo qualsiasi reindirizzamento specificato dal comando.